[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "record-type"
version = "2023.1.post1"
description = "A record type for Python"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [{ name = "Brett Cannon", email = "brett@python.org" }]
classifiers = ["Development Status :: 3 - Alpha"]

[project.urls]
Repository = "https://github.com/brettcannon/record-type"

[project.optional-dependencies]
test = ["pytest"]                             # py -m pytest test_records.py
benchmark = ["richbench", "attrs", "msgspec"] # py -m richbench --repeat 5 --times 1000 benchmarks/

[tool.ruff]
include = ["record_type"]
extend-exclude = ["examples"]
line-length = 120
target-version = "py311"
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "Q003",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "TRY",
    "RUF",
    "NPY",
    "PD",
]
ignore = [
    "G002",    # Erroneous issue with %-logging when logging can be configured for % logging.
    "S101",    # Use of assert here is a known quantity. Blame typing memes.
    "PLR2004", # Magic value comparison. May remove later.
    "SIM105",  # Suppressable exception. I'm not paying the overhead of contextlib.suppress for stylistic choices.
    "C90",     # McCabe complexity memes.
    "PLR0913", # Some functions require more than 5 arguments.
    "ANN101",  # Typing of Self for self is implicit.
    "ANN102",  # Same as ANN101 but for cls.
    "ANN204",  # Special method return types are known or implicit.
    "ANN401",  # Needed for the _make_var_X_annotation functions.
    "A002",    # Allow some shadowing.
    # Recommended by ruff when using ruff format.
    "COM812",
    "COM819",
    "E501",
    "ISC001",
    "Q003",
]
unfixable = [
    "ERA", # I don't want anything erroneously detected deleted by this.
]

[tool.ruff.isort]
combine-as-imports = true

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.extend-per-file-ignores]
"__init__.py" = [
    "PLC0414", # Let Pyright worry about re-exporting.
]
"benchmarks/*.*" = [
    "ANN",    # Don't need type annotations for these.
    "S301",   # Testing picklability.
    "INP001", # Doesn't need __init__.py.
]
"tests/*.*" = [
    "ANN",    # Don't need type annotations for these.
    "S301",   # Testing picklability.
    "INP001", # Doesn't need __init__.py.
]

[tool.pyright]
include = ["record_type"]
ignore = ["tests", "benchmarks", "examples"]
pythonVersion = "3.11"
typeCheckingMode = "strict"

reportPrivateUsage = "warning"
reportCallInDefaultInitializer = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
